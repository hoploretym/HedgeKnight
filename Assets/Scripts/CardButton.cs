using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class CardButton : MonoBehaviour
{
    private int cardIndex;
    private HandManager handManager;

    public TextMeshProUGUI cardNameText;
    public Image cardImage;
    private Button button;
    public Card Card { get; private set; }

    public int CardIndex => cardIndex; // –°–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ –∫–∞—Ä—Ç—ã

    public void Initialize(Card card, int index, HandManager hand)
    {
        if (card == null)
        {
            Debug.LogError($"[CardButton] –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–¥–∞–Ω–∞ NULL-–∫–∞—Ä—Ç–∞ –≤ Initialize! –ò–Ω–¥–µ–∫—Å: {index}");
            return;
        }

        cardIndex = index;
        handManager = hand;
        Card = card;

        GetComponent<Button>().onClick.AddListener(OnCardClicked);

// üî¥ –ö—Ä–∞—Å–Ω–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –∞—Ç–∞–∫—É—é—â–∏—Ö –∫–∞—Ä—Ç
    if (card.Type == CardType.Attack)
    {
        cardImage.color = new Color32(255, 0, 0, 255);
    }
    // üîµ –°–∏–Ω—è—è —Ä–∞–º–∫–∞ –¥–ª—è –∑–∞—â–∏—Ç–Ω—ã—Ö –∫–∞—Ä—Ç
    else if (card.Type == CardType.Defense)
    {
        cardImage.color = new Color32(0, 0, 255, 255);
    }

        Debug.Log($"[CardButton] –ö–∞—Ä—Ç–∞ {card.Name} (Index {index}) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –¢–∏–ø: {card.Type}");
    }

    public void OnCardClicked()
    {
        if (GameManager.Instance == null)
        {
            Debug.LogError("[CardButton] –û—à–∏–±–∫–∞: GameManager.Instance == null!");
            return;
        }

        Debug.Log($"[DEBUG] –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–µ {CardIndex}, –ø–µ—Ä–µ–¥–∞—ë–º –≤ GameManager.");
        GameManager.Instance.PlayerSelectCard(CardIndex);
        Debug.Log($"[DEBUG] –ö–∞—Ä—Ç–∞ {CardIndex} –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ GameManager.");
    }

    public void UpdateIndex(int newIndex)
    {
        cardIndex = newIndex;
    }
}
