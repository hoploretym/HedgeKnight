using UnityEngine;

public enum CardType { Attack, Defense }

public class Card
{
    public string Name { get; private set; }
    public int EnergyCost { get; private set; }
    public string TargetBodyPart { get; private set; }
    public int Damage { get; private set; }
    public CardType Type { get; private set; }
    public string[] Counters { get; private set; } // –ö–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —ç—Ç–∞ –∑–∞—â–∏—Ç–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç

    public Card(string name, int energyCost, string targetBodyPart, int damage, CardType type, string[] counters = null)
    {
        Name = name;
        EnergyCost = energyCost;
        TargetBodyPart = targetBodyPart;
        Damage = damage;
        Type = type;
        Counters = counters ?? new string[0]; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    }

    public void PlayCard(Character attacker, Character target, Card opponentCard)
    {
        if (attacker.Energy < EnergyCost)
        {
            Debug.Log($"{attacker.name} –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è {Name}");
            return;
        }

        // üõ° –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –∞—Ç–∞–∫–∞
        if (opponentCard != null && opponentCard.Type == CardType.Defense && System.Array.Exists(opponentCard.Counters, c => c == this.Name))
        {
            Debug.Log($"{attacker.name} –∞—Ç–∞–∫—É–µ—Ç {target.name}, –Ω–æ {opponentCard.Name} –±–ª–æ–∫–∏—Ä—É–µ—Ç!");
            return; 
        }

        // ‚öîÔ∏è –ù–∞–Ω–æ—Å–∏–º —É—Ä–æ–Ω
        Debug.Log($"{attacker.name} –∞—Ç–∞–∫—É–µ—Ç {target.name} –∏ –Ω–∞–Ω–æ—Å–∏—Ç {Damage} —É—Ä–æ–Ω–∞ –≤ {TargetBodyPart}");
        target.TakeDamage(Damage, TargetBodyPart);

        // üîã –¢—Ä–∞—Ç–∏–º —ç–Ω–µ—Ä–≥–∏—é
        attacker.UseEnergy(EnergyCost);

        // üîÑ –û–±–Ω–æ–≤–ª—è–µ–º UI
        GameManager.Instance.gameUI.UpdateCharacterDamage(attacker, TargetBodyPart, Damage);
    }
}
